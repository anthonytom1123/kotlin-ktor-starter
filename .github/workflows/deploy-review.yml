name: deploy-review
on:
  push:
    branches:
      - main
jobs:
  run-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
          cache: 'gradle'
      - name: "Init postgres"
        env:
          DB_PASSWORD: postgres
        run: |
          psql -h localhost -U postgres -d testdb -c "CREATE TABLE IF NOT EXISTS task(id SERIAL, "lineRef" VARCHAR(10) NOT NULL COLLATE pg_catalog."default", "lineName" VARCHAR(50) NOT NULL COLLATE pg_catalog."default", "stopRef" INTEGER NOT NULL, "stopName" VARCHAR (50) NOT NULL COLLATE pg_catalog."default", "directionRef" VARCHAR (10) COLLATE pg_catalog."default", "occupancy" VARCHAR (20) COLLATE pg_catalog."default", "arrivalTime" VARCHAR (30) COLLATE pg_catalog."default", CONSTRAINT task_pkey PRIMARY KEY (id,"lineRef","stopRef","directionRef","arrivalTime"));"
      - name: "build"
        env:
          DB_URL: localhost:5432
          DB_USER: postgres
          DB_PASSWORD: postgres
        run: ./gradlew build
      - uses: actions/upload-artifact@v4
        with:
          name: basic-server.jar
          path: applications/basic-server/build/libs/basic-server.jar
          retention-days: 1
      - uses: actions/upload-artifact@v4
        with:
          name: data-analyzer-server.jar
          path: applications/data-analyzer-server/build/libs/data-analyzer-server.jar
          retention-days: 1
      - uses: actions/upload-artifact@v4
        with:
          name: data-collector-server.jar
          path: applications/data-collector-server/build/libs/data-collector-server.jar
          retention-days: 1
#  artifact-registry:
#    runs-on: ubuntu-latest
#    needs: [run-tests]
#    permissions:
#      contents: 'read'
#      id-token: 'write'
#    steps:
#      - uses: actions/checkout@v4
#      - uses: google-github-actions/setup-gcloud@v2
#      - uses: actions/download-artifact@v4
#        with:
#          name: basic-server.jar
#          path: applications/basic-server/build/libs
#      - uses: actions/download-artifact@v4
#        with:
#          name: data-analyzer-server.jar
#          path: applications/data-analyzer-server/build/libs
#      - uses: actions/download-artifact@v4
#        with:
#          name: data-collector-server.jar
#          path: applications/data-collector-server/build/libs
#      - id: 'gcloud'
#        name: 'gcloud'
#        run: |-
#          echo "gcloud"
#  basic-server-review:
#    runs-on: ubuntu-latest
#    needs: [artifact-registry]
#    steps:
#      - uses: actions/checkout@v4
#      - uses: google-github-actions/setup-gcloud@v2
#      - id: 'gcloud'
#        name: 'gcloud'
#        run: |-
#          echo "gcloud"
#  deploy-data-analyzer-review:
#    runs-on: ubuntu-latest
#    needs: [artifact-registry]
#    steps:
#      - uses: actions/checkout@v4
#      - uses: google-github-actions/setup-gcloud@v2
#      - id: 'gcloud'
#        name: 'gcloud'
#        run: |-
#          echo "gcloud"
#  data-collector-review:
#    runs-on: ubuntu-latest
#    needs: [artifact-registry]
#    steps:
#      - uses: actions/checkout@v4
#      - uses: google-github-actions/setup-gcloud@v2
#      - id: 'gcloud'
#        name: 'gcloud'
#        run: |-
#          echo "gcloud"
